# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API

Write-Host "üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API /api/version/pods..." -ForegroundColor Green

try {
    $response = Invoke-WebRequest -Uri "http://localhost:3001/api/version/pods" -UseBasicParsing
    Write-Host "‚úÖ API –¥–æ—Å—Ç—É–ø–µ–Ω, —Å—Ç–∞—Ç—É—Å: $($response.StatusCode)" -ForegroundColor Green
    
    $pods = $response.Content | ConvertFrom-Json
    Write-Host "üì¶ –ù–∞–π–¥–µ–Ω–æ –ø–æ–¥–æ–≤: $($pods.Count)" -ForegroundColor Cyan
    
    if ($pods.Count -gt 0) {
        Write-Host "`nüìã –°–ø–∏—Å–æ–∫ –ø–æ–¥–æ–≤:" -ForegroundColor Yellow
        foreach ($pod in $pods) {
            Write-Host "  - $($pod.name): $($pod.version)" -ForegroundColor White
        }
    } else {
        Write-Host "‚ö†Ô∏è –ü–æ–¥—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã" -ForegroundColor Yellow
    }
    
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ API: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "`nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ API /api/version/test..." -ForegroundColor Green

try {
    $response = Invoke-WebRequest -Uri "http://localhost:3001/api/version/test" -UseBasicParsing
    Write-Host "‚úÖ Test API –¥–æ—Å—Ç—É–ø–µ–Ω, —Å—Ç–∞—Ç—É—Å: $($response.StatusCode)" -ForegroundColor Green
    
    $testResult = $response.Content | ConvertFrom-Json
    Write-Host "üìä –†–µ–∑—É–ª—å—Ç–∞—Ç —Ç–µ—Å—Ç–∞:" -ForegroundColor Cyan
    Write-Host "  –°—Ç–∞—Ç—É—Å: $($testResult.status)" -ForegroundColor White
    Write-Host "  Kubernetes enabled: $($testResult.kubernetesEnabled)" -ForegroundColor White
    Write-Host "  Namespace: $($testResult.namespace)" -ForegroundColor White
    Write-Host "  –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–æ–≤: $($testResult.podsCount)" -ForegroundColor White
    
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ Test API: $($_.Exception.Message)" -ForegroundColor Red
}
