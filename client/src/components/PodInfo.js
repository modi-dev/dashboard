import React, { useState, useEffect } from 'react';
import './PodInfo.css';

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ Kubernetes –ø–æ–¥–∞—Ö
 * –ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏–∑ version.sh —Å–∫—Ä–∏–ø—Ç–∞
 */
const PodInfo = () => {
  // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–¥–∞—Ö
  const [pods, setPods] = useState([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);
  const [namespace, setNamespace] = useState('');
  const [lastUpdate, setLastUpdate] = useState(null);

  /**
   * –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–¥–∞—Ö —Å —Å–µ—Ä–≤–µ—Ä–∞
   */
  const fetchPods = async () => {
    try {
      setLoading(true);
      setError(null);

      console.log('–ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–¥–∞—Ö...');

      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–¥–∞—Ö
      const podsResponse = await fetch('http://localhost:3001/api/version/pods');
      console.log('Pods response status:', podsResponse.status);
      
      if (!podsResponse.ok) {
        const errorText = await podsResponse.text();
        console.error('Pods response error:', errorText);
        throw new Error(`–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–¥–∞—Ö: ${podsResponse.status} - ${errorText}`);
      }
      
      const podsData = await podsResponse.json();
      console.log('Pods data received:', podsData);

      // –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ namespace
      const namespaceResponse = await fetch('http://localhost:3001/api/version/namespace');
      if (namespaceResponse.ok) {
        const namespaceData = await namespaceResponse.text();
        setNamespace(namespaceData);
        console.log('Namespace:', namespaceData);
      }

      setPods(podsData);
      setLastUpdate(new Date());
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–¥–∞—Ö:', err);
      setError(err.message);
    } finally {
      setLoading(false);
    }
  };

  /**
   * –ó–∞–≥—Ä—É–∑–∫–∞ HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å –≤–µ—Ä—Å–∏—è–º–∏ (–∫–∞–∫ –≤ –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–º —Å–∫—Ä–∏–ø—Ç–µ)
   */
  const fetchHtmlPage = async () => {
    try {
      const response = await fetch('http://localhost:3001/api/version/html');
      if (!response.ok) {
        throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã');
      }
      const html = await response.text();
      
      // –û—Ç–∫—Ä—ã–≤–∞–µ–º HTML –≤ –Ω–æ–≤–æ–º –æ–∫–Ω–µ
      const newWindow = window.open('', '_blank');
      newWindow.document.write(html);
      newWindow.document.close();
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã:', err);
      setError(err.message);
    }
  };

  /**
   * –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ Kubernetes API
   */
  const checkKubernetesHealth = async () => {
    try {
      const response = await fetch('http://localhost:3001/api/version/health');
      if (response.ok) {
        const healthData = await response.text();
        alert(`Kubernetes API: ${healthData}`);
      } else {
        alert('Kubernetes API –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
      }
    } catch (err) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ Kubernetes API:', err);
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ Kubernetes API');
    }
  };

  // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞
  useEffect(() => {
    fetchPods();
  }, []);

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
   */
  const formatDate = (dateString) => {
    if (!dateString) return '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
    
    try {
      const date = new Date(dateString);
      return date.toLocaleString('ru-RU', {
        year: 'numeric',
        month: '2-digit',
        day: '2-digit',
        hour: '2-digit',
        minute: '2-digit',
        second: '2-digit'
      });
    } catch (err) {
      return dateString;
    }
  };

  /**
   * –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
   */
  const formatLastUpdate = () => {
    if (!lastUpdate) return '–ù–∏–∫–æ–≥–¥–∞';
    
    return lastUpdate.toLocaleString('ru-RU', {
      year: 'numeric',
      month: '2-digit',
      day: '2-digit',
      hour: '2-digit',
      minute: '2-digit',
      second: '2-digit'
    });
  };

  // –ï—Å–ª–∏ –∑–∞–≥—Ä—É–∑–∫–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
  if (loading) {
    return (
      <div className="pod-info-container">
        <div className="pod-info-header">
          <h2>üì¶ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∞—Ö Kubernetes</h2>
          <div className="loading-spinner">–ó–∞–≥—Ä—É–∑–∫–∞...</div>
        </div>
      </div>
    );
  }

  // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ
  if (error) {
    return (
      <div className="pod-info-container">
        <div className="pod-info-header">
          <h2>üì¶ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∞—Ö Kubernetes</h2>
          <div className="error-message">
            <p>‚ùå –û—à–∏–±–∫–∞: {error}</p>
            <button onClick={fetchPods} className="retry-button">
              üîÑ –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
            </button>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="pod-info-container">
      {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Å –∫–Ω–æ–ø–∫–∞–º–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
      <div className="pod-info-header">
        <h2>üì¶ –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–¥–∞—Ö Kubernetes</h2>
        <div className="pod-info-controls">
          <button onClick={fetchPods} className="refresh-button" title="–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ">
            üîÑ –û–±–Ω–æ–≤–∏—Ç—å
          </button>
          <button onClick={fetchHtmlPage} className="html-button" title="–û—Ç–∫—Ä—ã—Ç—å HTML –≤–µ—Ä—Å–∏—é">
            üåê HTML –≤–µ—Ä—Å–∏—è
          </button>
          <button onClick={checkKubernetesHealth} className="health-button" title="–ü—Ä–æ–≤–µ—Ä–∏—Ç—å Kubernetes API">
            ‚ù§Ô∏è –ü—Ä–æ–≤–µ—Ä–∏—Ç—å API
          </button>
        </div>
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ namespace –∏ –≤—Ä–µ–º–µ–Ω–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è */}
      <div className="pod-info-meta">
        <div className="meta-item">
          <span className="meta-label">Namespace:</span>
          <span className="meta-value">{namespace || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</span>
        </div>
        <div className="meta-item">
          <span className="meta-label">–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ:</span>
          <span className="meta-value">{formatLastUpdate()}</span>
        </div>
        <div className="meta-item">
          <span className="meta-label">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–¥–æ–≤:</span>
          <span className="meta-value">{pods.length}</span>
        </div>
      </div>

      {/* –¢–∞–±–ª–∏—Ü–∞ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –ø–æ–¥–∞—Ö */}
      {pods.length > 0 ? (
        <div className="pod-info-table-container">
          <table className="pod-info-table">
            <thead>
              <tr>
                <th>–ò–º—è</th>
                <th>–í–µ—Ä—Å–∏—è</th>
                <th>Ms Branch</th>
                <th>Config Branch</th>
                <th>GC Options</th>
                <th>–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è</th>
                <th>–ü–æ—Ä—Ç</th>
                <th>–†–µ—Å—É—Ä—Å—ã</th>
              </tr>
            </thead>
            <tbody>
              {pods.map((pod, index) => (
                <tr key={index} className="pod-row">
                  <td className="pod-name">{pod.name || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</td>
                  <td className="pod-version">{pod.version || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ'}</td>
                  <td className="pod-ms-branch">{pod.msBranch || '-'}</td>
                  <td className="pod-config-branch">{pod.configBranch || '-'}</td>
                  <td className="pod-gc-options">{pod.gcOptions || '-'}</td>
                  <td className="pod-creation-date">{formatDate(pod.creationDate)}</td>
                  <td className="pod-port">{pod.port || '-'}</td>
                  <td className="pod-resources">
                    <div className="resource-info">
                      <div className="resource-item">
                        <span className="resource-label">CPU:</span>
                        <span className="resource-value">{pod.cpuRequest || '-'}</span>
                      </div>
                      <div className="resource-item">
                        <span className="resource-label">RAM:</span>
                        <span className="resource-value">{pod.memoryRequest || '-'}</span>
                      </div>
                    </div>
                  </td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      ) : (
        <div className="no-pods-message">
          <p>üì≠ –ü–æ–¥—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã</p>
          <p>–£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Kubernetes –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤–∫–ª—é—á–µ–Ω–∞ –∏ –µ—Å—Ç—å –∑–∞–ø—É—â–µ–Ω–Ω—ã–µ –ø–æ–¥—ã</p>
        </div>
      )}
    </div>
  );
};

export default PodInfo;
