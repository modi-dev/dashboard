# PowerShell —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Kubernetes –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤

Write-Host "üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Kubernetes –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤..." -ForegroundColor Green

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
if (-NOT ([Security.Principal.WindowsPrincipal] [Security.Principal.WindowsIdentity]::GetCurrent()).IsInRole([Security.Principal.WindowsBuiltInRole] "Administrator")) {
    Write-Host "‚ö†Ô∏è  –ó–∞–ø—É—Å—Ç–∏—Ç–µ PowerShell –æ—Ç –∏–º–µ–Ω–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!" -ForegroundColor Red
    exit 1
}

# –°–æ–∑–¥–∞–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ø–∞–ø–∫–∏
$tempDir = "$env:TEMP\k8s-tools"
New-Item -ItemType Directory -Path $tempDir -Force | Out-Null

Write-Host "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ kubectl..." -ForegroundColor Yellow

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ kubectl
$kubectlVersion = "v1.28.0"
$kubectlUrl = "https://dl.k8s.io/release/$kubectlVersion/bin/windows/amd64/kubectl.exe"
$kubectlPath = "$tempDir\kubectl.exe"

try {
    Invoke-WebRequest -Uri $kubectlUrl -OutFile $kubectlPath -UseBasicParsing
    Copy-Item $kubectlPath "C:\Windows\System32\kubectl.exe" -Force
    Write-Host "‚úÖ kubectl —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ kubectl: $($_.Exception.Message)" -ForegroundColor Red
}

Write-Host "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Minikube..." -ForegroundColor Yellow

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Minikube
$minikubeUrl = "https://storage.googleapis.com/minikube/releases/latest/minikube-windows-amd64.exe"
$minikubePath = "$tempDir\minikube.exe"

try {
    Invoke-WebRequest -Uri $minikubeUrl -OutFile $minikubePath -UseBasicParsing
    Copy-Item $minikubePath "C:\Windows\System32\minikube.exe" -Force
    Write-Host "‚úÖ Minikube —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —É—Å–ø–µ—à–Ω–æ" -ForegroundColor Green
} catch {
    Write-Host "‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Minikube: $($_.Exception.Message)" -ForegroundColor Red
}

# –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
Remove-Item -Path $tempDir -Recurse -Force

Write-Host "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..." -ForegroundColor Yellow

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
try {
    $kubectlVersion = kubectl version --client --output=yaml | Select-String "gitVersion" | ForEach-Object { $_.Line.Split(':')[1].Trim() }
    Write-Host "‚úÖ kubectl –≤–µ—Ä—Å–∏—è: $kubectlVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå kubectl –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
}

try {
    $minikubeVersion = minikube version --output=json | ConvertFrom-Json | Select-Object -ExpandProperty minikubeVersion
    Write-Host "‚úÖ Minikube –≤–µ—Ä—Å–∏—è: $minikubeVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Minikube –Ω–µ –Ω–∞–π–¥–µ–Ω" -ForegroundColor Red
}

Write-Host "üê≥ –ü—Ä–æ–≤–µ—Ä–∫–∞ Docker..." -ForegroundColor Yellow

try {
    $dockerVersion = docker --version
    Write-Host "‚úÖ Docker: $dockerVersion" -ForegroundColor Green
} catch {
    Write-Host "‚ùå Docker –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Docker Desktop —Å https://www.docker.com/products/docker-desktop" -ForegroundColor Red
}

Write-Host "üéØ –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:" -ForegroundColor Cyan
Write-Host "1. –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ Docker Desktop –∑–∞–ø—É—â–µ–Ω" -ForegroundColor White
Write-Host "2. –ó–∞–ø—É—Å—Ç–∏—Ç–µ: minikube start --driver=docker --addons=ingress" -ForegroundColor White
Write-Host "3. –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ –ø–∞–ø–∫—É kubernetes –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: .\deploy.ps1" -ForegroundColor White

Write-Host "‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!" -ForegroundColor Green

