kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.global.namespace }}
  labels:
    app: {{ .Release.Name }}
spec:
  replicas: {{ .Values.main.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  template:
    metadata:
      {{- if .Values.main.istio.enable }}
      annotations:
        sidecar.istio.io/inject: "{{ .Values.main.istio.enable }}"
        sidecar.istio.io/proxyCPU: 160m
        sidecar.istio.io/proxyCPULimit: 320m
        sidecar.istio.io/proxyMemory: 256Mi
        sidecar.istio.io/proxyMemoryLimit: 512Mi
        sidecar.istio.io/rewriteAppHTTPProbers: 'true'
      {{- end }}
      labels:
        app: {{ .Release.Name }}
    spec:
      containers:
        - name: {{ .Release.Name }}
          image: "{{ .Values.global.registry }}/{{ .Values.main.image }}:{{ .Values.main.tag }}"
          {{- if .Values.main.Probe.enabled }}
          livenessProbe:
            exec:
              command:
                - {{ .Values.main.Probe.livenessProbe.exec.command }}
            periodSeconds: {{ .Values.main.Probe.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.main.Probe.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.main.Probe.livenessProbe.failureThreshold }}
          readinessProbe:
            httpGet:
              path: {{ .Values.main.Probe.readinessProbe.httpGet.path }}
              port: {{ .Values.main.Probe.readinessProbe.httpGet.port }}
              scheme: HTTP
            periodSeconds: {{ .Values.main.Probe.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.main.Probe.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.main.Probe.readinessProbe.failureThreshold }}
          {{- end }}
          env:
            - name: TZ
              value: Europe/Moscow
          ports:
            - containerPort: {{ .Values.main.port }}
              protocol: TCP
          resources: {{ toYaml .Values.main.resources | nindent 12 }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: {{ .Values.main.pullPolicy }}
      serviceAccount: {{ .Values.main.serviceAccount }}
      serviceAccountName: {{ .Values.main.serviceAccountName }}
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600