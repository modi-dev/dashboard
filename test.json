{
	"kind": "Deployment",
	"apiVersion": "apps/v1",
	"metadata": {
		"name": "nginx-test",
		"namespace": "dev-tools",
		"labels": {
			"app": "nginx-test"
		},
		"annotations": {
			"deployment.kubernetes.io/revision": "1",
			"kubectl.kubernetes.io/last-applied-configuration": "{\"apiVersion\":\"apps/v1\",\"kind\":\"Deployment\",\"metadata\":{\"annotations\":{},\"labels\":{\"app\":\"nginx-test\"},\"name\":\"nginx-test\",\"namespace\":\"dev-tools\"},\"spec\":{\"replicas\":2,\"selector\":{\"matchLabels\":{\"app\":\"nginx-test\"}},\"template\":{\"metadata\":{\"labels\":{\"app\":\"nginx-test\"}},\"spec\":{\"containers\":[{\"image\":\"nginx:alpine\",\"livenessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":80},\"initialDelaySeconds\":10,\"periodSeconds\":10},\"name\":\"nginx\",\"ports\":[{\"containerPort\":80}],\"readinessProbe\":{\"httpGet\":{\"path\":\"/\",\"port\":80},\"initialDelaySeconds\":5,\"periodSeconds\":5},\"resources\":{\"limits\":{\"cpu\":\"100m\",\"memory\":\"128Mi\"},\"requests\":{\"cpu\":\"50m\",\"memory\":\"64Mi\"}}}]}}}}\n"
		}
	},
	"spec": {
		"replicas": 2,
		"selector": {
			"matchLabels": {
				"app": "nginx-test"
			}
		},
		"template": {
			"metadata": {
				"labels": {
					"app": "nginx-test"
				}
			},
			"spec": {
				"containers": [
					{
						"name": "nginx",
						"image": "nginx:alpine",
                        "env": [
                            {
                                "name": "APP_PORT",
                                "value": "8081"
                            },
                            {
                                "name": "MANAGEMENT_PORT",
                                "value": "8080"
                            },
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "HOSTNAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "AUDITOMNI_POD_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.name"
                                    }
                                }
                            },
                            {
                                "name": "AUDITOMNI_POD_NAMESPACE",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "metadata.namespace"
                                    }
                                }
                            },
                            {
                                "name": "DUMP_STARTER_CACHE_VOLUME_SIZE",
                                "value": "4000"
                            },
                            {
                                "name": "DUMP_STARTER_HEAP_DUMPS_OOM_DIRECTORY_PATH",
                                "value": "/tmp/dumps/heap_dumps/oom"
                            },
                            {
                                "name": "DUMP_STARTER_THREADS_DUMPS_OOM_DIRECTORY_PATH",
                                "value": "/tmp/dumps/threads_dumps/oom"
                            },
                            {
                                "name": "DUMP_STARTER_HEAP_DUMPS_THRESHOLD_DIRECTORY_PATH",
                                "value": "/tmp/dumps/heap_dumps/threshold"
                            },
                            {
                                "name": "DUMP_STARTER_THREADS_DUMPS_THRESHOLD_DIRECTORY_PATH",
                                "value": "/tmp/dumps/threads_dumps/threshold"
                            },
                            {
                                "name": "DUMP_STARTER_OOM_SLEEP_INTERVAL",
                                "value": "10"
                            },
                            {
                                "name": "SPRING_PROFILES_ACTIVE",
                                "value": "dev"
                            },
                            {
                                "name": "SPRING_MAIN_BANNER_MODE",
                                "value": "off"
                            },
                            {
                                "name": "JAEGER_SERVICE_NAME",
                                "value": "ACCR.msaccr-account-provider.dk1-cole01-accr-accr-dev"
                            },
                            {
                                "name": "OTEL_SERVICE_NAME",
                                "value": "ACCR.msaccr-account-provider.dk1-cole01-accr-accr-dev"
                            },
                            {
                                "name": "LOGGING_CONFIG",
                                "value": "/config/logback.xml"
                            },
                            {
                                "name": "OPENTRACING_JAEGER_UDPSENDER_HOST",
                                "value": "localhost"
                            },
                            {
                                "name": "TZ",
                                "value": "Europe/Moscow"
                            },
                            {
                                "name": "JAVA_TOOL_OPTIONS",
                                "value": "-XX:MaxRAMPercentage=75.0\n-Dfile.encoding=UTF-8\n-Duser.language=ru\n-Duser.country=RU\n-Dcom.sun.management.jmxremote.ssl=false\n-Dcom.sun.management.jmxremote.authenticate=false\n-Dcom.sun.management.jmxremote.port=5000\n-Dcom.sun.management.jmxremote.rmi.port=5000\n-Dcom.sun.management.jmxremote.host=127.0.0.1\n-Djava.rmi.server.hostname=127.0.0.1\n-Dspring.config.location=file:/opt/app/application.yaml\n-Xms560m\n-Xmx560m\n-XX:+AlwaysPreTouch\n-XX:ReservedCodeCacheSize=128M\n-XX:MaxDirectMemorySize=128M\n-XX:+UseG1GC\n-XX:+UnlockExperimentalVMOptions\n-XX:G1MaxNewSizePercent=35\n-XX:MaxGCPauseMillis=100\n-XX:G1HeapWastePercent=3\n-XX:MinHeapFreeRatio=30\n-XX:InitiatingHeapOccupancyPercent=35\n-XX:GCTimeRatio=4\n-XX:G1ReservePercent=15\n-XX:+G1PeriodicGCInvokesConcurrent\n-XX:G1PeriodicGCInterval=30000\n-Dotel.javaagent.logging=application\n-javaagent:/opt/app/opentelemetry-javaagent.jar\n-Dotel.javaagent.extensions=/opt/app/tstr-kafka-exporter.jar\n-Dotel.instrumentation.jdbc.enabled=false\n-Dlogging.config=file:/config/logback.xml\n-Dlogback.configurationFile=file:/config/logback.xml\n"
                            }
                        ],
						"ports": [
							{
								"containerPort": 80,
								"protocol": "TCP"
							}
						],
						"resources": {
							"limits": {
								"cpu": "100m",
								"memory": "128Mi"
							},
							"requests": {
								"cpu": "50m",
								"memory": "64Mi"
							}
						},
						"livenessProbe": {
							"httpGet": {
								"path": "/",
								"port": 80,
								"scheme": "HTTP"
							},
							"initialDelaySeconds": 10,
							"timeoutSeconds": 1,
							"periodSeconds": 10,
							"successThreshold": 1,
							"failureThreshold": 3
						},
						"readinessProbe": {
							"httpGet": {
								"path": "/",
								"port": 80,
								"scheme": "HTTP"
							},
							"initialDelaySeconds": 5,
							"timeoutSeconds": 1,
							"periodSeconds": 5,
							"successThreshold": 1,
							"failureThreshold": 3
						},
						"terminationMessagePath": "/dev/termination-log",
						"terminationMessagePolicy": "File",
						"imagePullPolicy": "IfNotPresent"
					}
				],
				"restartPolicy": "Always",
				"terminationGracePeriodSeconds": 30,
				"dnsPolicy": "ClusterFirst",
				"securityContext": {},
				"schedulerName": "default-scheduler"
			}
		},
		"strategy": {
			"type": "RollingUpdate",
			"rollingUpdate": {
				"maxUnavailable": "25%",
				"maxSurge": "25%"
			}
		},
		"revisionHistoryLimit": 10,
		"progressDeadlineSeconds": 600
	}
}